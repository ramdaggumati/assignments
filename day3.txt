1.Do the below programs in anonymous function & IIFE

#anonymous :

a.Print odd numbers in an array
 
var printOddNumbers = function(arr) {
    arr.forEach(function(num) {
        if (num % 2 !== 0) {
            console.log(num);
        }
    });
};

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
printOddNumbers(numbers);

b.Convert all the strings to title caps in a string array

var convertToTitleCase = function(arr) {
    return arr.map(function(str) {
        return str.toLowerCase().replace(/\b\w/g, function(char) {
            return char.toUpperCase();
        });
    });
};

var strings = ["hello world", "good morning", "have a nice day"];
var titleCaseStrings = convertToTitleCase(strings);
console.log(titleCaseStrings);

C.Sum of all numbers in an array

var sumOfArray = function(arr) {
    return arr.reduce(function(total, num) {
        return total + num;
    }, 0);
};

var numbers = [1, 2, 3, 4, 5];
var sum = sumOfArray(numbers);
console.log("The sum of all numbers in the array is:", sum);

d.Return all the prime numbers in an array
var isPrime = function(num) {
    if (num <= 1) {
        return false;
    }
    for (var i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) {
            return false;
        }
    }
    return true;
};

var findPrimeNumbers = function(arr) {
    return arr.filter(function(num) {
        return isPrime(num);
    });
};

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var primeNumbers = findPrimeNumbers(numbers);
console.log("Prime numbers in the array:", primeNumbers);

e.Return all the palindromes in an array
var isPalindrome = function(str) {
    var reversedStr = str.split('').reverse().join('');
    return str === reversedStr;
};

var findPalindromes = function(arr) {
    return arr.filter(function(word) {
        return isPalindrome(word);
    });
};

var words = ["radar", "level", "hello", "world", "madam"];
var palindromes = findPalindromes(words);
console.log("Palindromes in the array:", palindromes);


f.Return median of two sorted arrays of the same size.

var findMedianSortedArrays = function(nums1, nums2) {
    var mergedArray = mergeArrays(nums1, nums2);
    var n = mergedArray.length;
    
    if (n % 2 === 0) {
        // If the merged array length is even, return the average of the middle two elements
        var midIndex = n / 2;
        return (mergedArray[midIndex - 1] + mergedArray[midIndex]) / 2;
    } else {
        // If the merged array length is odd, return the middle element
        var midIndex = Math.floor(n / 2);
        return mergedArray[midIndex];
    }
};

var mergeArrays = function(nums1, nums2) {
    var merged = [];
    var i = 0, j = 0;
    
    while (i < nums1.length && j < nums2.length) {
        if (nums1[i] < nums2[j]) {
            merged.push(nums1[i]);
            i++;
        } else {
            merged.push(nums2[j]);
            j++;
        }
    }
    
    while (i < nums1.length) {
        merged.push(nums1[i]);
        i++;
    }
    
    while (j < nums2.length) {
        merged.push(nums2[j]);
        j++;
    }
    
    return merged;
};

var nums1 = [1, 3, 5];
var nums2 = [2, 4, 6];
var median = findMedianSortedArrays(nums1, nums2);
console.log("Median of the two sorted arrays:", median);

g.Remove duplicates from an array

var removeDuplicates = function(arr) {
    return [...new Set(arr)];
};

var array = [1, 2, 3, 4, 2, 3, 5];
var uniqueArray = removeDuplicates(array);
console.log("Array with duplicates removed:", uniqueArray);


h.Rotate an array by k times

var rotateArray = function(arr, k) {
    k = k % arr.length;
    reverseArray(arr, 0, arr.length - 1);
    reverseArray(arr, 0, k - 1);
    reverseArray(arr, k, arr.length - 1);
    return arr;
};

var reverseArray = function(arr, start, end) {
    while (start < end) {
        var temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
};

var array = [1, 2, 3, 4, 5];
var k = 2;
var rotatedArray = rotateArray(array, k);
console.log("Array after rotating", k, "times:", rotatedArray);

#IIFE:
a.Print odd numbers in an array
(function(arr){
    for(let num of arr){
        if(num % 2 !== 0){
            console.log(num);
        }
    }
})([1, 2, 3, 4, 5]);

b.Convert all the strings to title caps in a string array
(function(arr){
    for(let i = 0; i < arr.length; i++){
        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1).toLowerCase();
    }
    console.log(arr);
})(["hello", "world", "this", "is", "a", "test"]);

c.Sum of all numbers in an array
(function(arr){
    let sum = 0;
    for(let num of arr){
        sum += num;
    }
    console.log(sum);
})([1, 2, 3, 4, 5]);

d.Return all the prime numbers in an array
(function(arr){
    function isPrime(num) {
        if (num <= 1) return false;
        if (num <= 3) return true;

        if (num % 2 === 0 || num % 3 === 0) return false;

        let i = 5;
        while (i * i <= num) {
            if (num % i === 0 || num % (i + 2) === 0) return false;
            i += 6;
        }

        return true;
    }

    let primes = arr.filter(num => isPrime(num));
    console.log(primes);
})([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);

e.Return all the palindromes in an array
(function(arr){
    function isPalindrome(str) {
        return str === str.split('').reverse().join('');
    }

    let palindromes = arr.filter(word => isPalindrome(word));
    console.log(palindromes);
})(["radar", "hello", "level", "world", "deified"]);

f.Return median of two sorted arrays of the same size.
(function(arr1, arr2){
    let mergedArr = arr1.concat(arr2);
    mergedArr.sort((a, b) => a - b);

    let length = mergedArr.length;
    let median;
    if(length % 2 === 0){
        median = (mergedArr[length / 2 - 1] + mergedArr[length / 2]) / 2;
    } else {
        median = mergedArr[Math.floor(length / 2)];
    }

    console.log(median);
})([1, 3, 5], [2, 4, 6]);

g.Remove duplicates from an array
(function(arr){
    let uniqueArr = [...new Set(arr)];
    console.log(uniqueArr);
})([1, 2, 2, 3, 4, 4, 5]);

h.Rotate an array by k times
(function(arr, k){
    for(let i = 0; i < k; i++){
        arr.unshift(arr.pop());
    }
    console.log(arr);
})([1, 2, 3, 4, 5], 2);


2.Do the below programs in arrow functions.

a.Print odd numbers in an array
const printOddNumbers = (arr) => {
    arr.forEach(num => {
        if (num % 2 !== 0) {
            console.log(num);
        }
    });
}

b.Convert all the strings to title caps in a string array
const titleCaps = (arr) => {
    return arr.map(str => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase());
}

c.Sum of all numbers in an array
const sumOfArray = (arr) => {
    return arr.reduce((acc, curr) => acc + curr, 0);
}
 
d.Return all the prime numbers in an array
const isPrime = (num) => {
    if (num <= 1) return false;
    if (num <= 3) return true;
    if (num % 2 === 0 || num % 3 === 0) return false;

    let i = 5;
    while (i * i <= num) {
        if (num % i === 0 || num % (i + 2) === 0) return false;
        i += 6;
    }
    return true;
}

const getPrimes = (arr) => {
    return arr.filter(num => isPrime(num));
}

e.Return all the palindromes in an array
const isPalindrome = (str) => {
    const reversed = str.split('').reverse().join('');
    return str === reversed;
}

const getPalindromes = (arr) => {
    return arr.filter(str => isPalindrome(str));
}
